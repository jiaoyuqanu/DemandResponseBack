<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xqxy.dr.modular.event.mapper.PlanCustMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xqxy.dr.modular.event.entity.PlanCust">
        <id column="partic_id" property="particId" />
        <result column="PLAN_ID" property="planId" />
        <result column="CUST_ID" property="custId" />
        <result column="DEMAND_CAP" property="demandCap" />
        <result column="sequence_no" property="sequenceNo" />
        <result column="deleted" property="deleted" />
        <result column="del_rule" property="delRule" />
        <result column="CREATE_TIME" property="createTime" />
        <result column="CREATE_USER" property="createUser" />
        <result column="UPDATE_TIME" property="updateTime" />
        <result column="UPDATE_USER" property="updateUser" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        partic_id, PLAN_ID, CUST_ID, DEMAND_CAP, sequence_no, deleted, del_rule, CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER
    </sql>

    <select id="pageCustMonitor" resultType="com.xqxy.dr.modular.event.entity.PlanCust" parameterType="com.xqxy.dr.modular.event.param.PlanCustParam">
    SELECT
        c.id as custId,
        c.legal_name AS legalName,
        c.CREDIT_CODE AS creditCode,
        c.legal_name AS contactName,
        c.tel AS phone,
        d.demandCap,
        d.count
    FROM
        dr_plan_cust pla
        LEFT JOIN dr_cust c ON pla.cust_id = c.id
        LEFT JOIN (
        SELECT
            c.cust_id,
            c.DEMAND_CAP as demandCap,
            count( a.cons_id ) as count
        FROM
            dr_plan_cons a
            LEFT JOIN dr_user_cons_rela b ON a.cons_id = b.cons_no
            LEFT JOIN dr_plan_cust c ON c.cust_id = b.cust_id
        WHERE
            c.plan_id = #{planCustParam.planId}
            AND a.plan_id = #{planCustParam.planId}
            and a.INVOLVED_IN='Y'
            and c.deleted='N'
            and c.INVOLVED_IN='Y'
            and c.IMPLEMENT='Y'
        GROUP BY
        c.cust_id
        )d on d.cust_id = pla.cust_id
       <where>
               pla.plan_id = #{planCustParam.planId}
               AND pla.deleted = 'N'
               AND pla.INVOLVED_IN = 'Y'
               AND pla.IMPLEMENT = 'Y'
           <if test="planCustParam.provinceCode != null and planCustParam.provinceCode!='' ">
               and c.province_code = #{planCustParam.provinceCode}
           </if>
           <if test="planCustParam.cityCode != null and planCustParam.cityCode!='' ">
               and c.city_code = #{planCustParam.cityCode}
           </if>
           <if test="planCustParam.countryCode != null and planCustParam.countryCode!='' ">
               and c.county_code = #{planCustParam.countryCode}
           </if>
           <if test="planCustParam.integrator != null and planCustParam.integrator!='' ">
               and c.integrator = #{planCustParam.integrator}
           </if>
           <if test="planCustParam.legalName != null and planCustParam.legalName!='' ">
               and c.legal_name like concat('%', #{planCustParam.legalName}, '%')
           </if>
           <if test="planCustParam.creditCode != null and planCustParam.creditCode!='' ">
               and c.CREDIT_CODE = #{planCustParam.creditCode}
           </if>
       </where>
    </select>

    <select id="getCustCurveToday" resultType="com.xqxy.dr.modular.data.entity.ConsCurve" parameterType="com.xqxy.dr.modular.data.param.CustCurveParam">
        SELECT
        data_id as dataId,
        data_date as dataDate,
        data_point_flag as dataPointFlag,
        sum( p1 ) AS p1,
        sum( p2 ) AS p2,
        sum( p3 ) AS p3,
        sum( p4 ) AS p4,
        sum( p5 ) AS p5,
        sum( p6 ) AS p6,
        sum( p7 ) AS p7,
        sum( p8 ) AS p8,
        sum( p9 ) AS p9,
        sum( p10 ) AS p10,
        sum( p11 ) AS p11,
        sum( p12 ) AS p12,
        sum( p13 ) AS p13,
        sum( p14 ) AS p14,
        sum( p15 ) AS p15,
        sum( p16 ) AS p16,
        sum( p17 ) AS p17,
        sum( p18 ) AS p18,
        sum( p19 ) AS p19,
        sum( p20 ) AS p20,
        sum( p21 ) AS p21,
        sum( p22 ) AS p22,
        sum( p23 ) AS p23,
        sum( p24 ) AS p24,
        sum( p25 ) AS p25,
        sum( p26 ) AS p26,
        sum( p27 ) AS p27,
        sum( p28 ) AS p28,
        sum( p29 ) AS p29,
        sum( p30 ) AS p30,
        sum( p31 ) AS p31,
        sum( p32 ) AS p32,
        sum( p33 ) AS p33,
        sum( p34 ) AS p34,
        sum( p35 ) AS p35,
        sum( p36 ) AS p36,
        sum( p37 ) AS p37,
        sum( p38 ) AS p38,
        sum( p39 ) AS p39,
        sum( p40 ) AS p40,
        sum( p41 ) AS p41,
        sum( p42 ) AS p42,
        sum( p43 ) AS p43,
        sum( p44 ) AS p44,
        sum( p45 ) AS p45,
        sum( p46 ) AS p46,
        sum( p47 ) AS p47,
        sum( p48 ) AS p48,
        sum( p49 ) AS p49,
        sum( p50 ) AS p50,
        sum( p51 ) AS p51,
        sum( p52 ) AS p52,
        sum( p53 ) AS p53,
        sum( p54 ) AS p54,
        sum( p55 ) AS p55,
        sum( p56 ) AS p56,
        sum( p57 ) AS p57,
        sum( p58 ) AS p58,
        sum( p59 ) AS p59,
        sum( p60 ) AS p60,
        sum( p61 ) AS p61,
        sum( p62 ) AS p62,
        sum( p63 ) AS p63,
        sum( p64 ) AS p64,
        sum( p65 ) AS p65,
        sum( p66 ) AS p66,
        sum( p67 ) AS p67,
        sum( p68 ) AS p68,
        sum( p69 ) AS p69,
        sum( p70 ) AS p70,
        sum( p71 ) AS p71,
        sum( p72 ) AS p72,
        sum( p73 ) AS p73,
        sum( p74 ) AS p74,
        sum( p75 ) AS p75,
        sum( p76 ) AS p76,
        sum( p77 ) AS p77,
        sum( p78 ) AS p78,
        sum( p79 ) AS p79,
        sum( p80 ) AS p80,
        sum( p81 ) AS p81,
        sum( p82 ) AS p82,
        sum( p83 ) AS p83,
        sum( p84 ) AS p84,
        sum( p85 ) AS p85,
        sum( p86 ) AS p86,
        sum( p87 ) AS p87,
        sum( p88 ) AS p88,
        sum( p89 ) AS p89,
        sum( p90 ) AS p90,
        sum( p91 ) AS p91,
        sum( p92 ) AS p92,
        sum( p93 ) AS p93,
        sum( p94 ) AS p94,
        sum( p95 ) AS p95,
        sum( p96 ) AS p96
        FROM
            dr_cons_curve_today
        WHERE
            cons_id IN (
            SELECT
                cons_id
            FROM
                dr_user_cons_rela a
                LEFT JOIN dr_plan_cons b ON a.cons_no = b.cons_id
            WHERE
                a.cust_id = #{custId}
                AND b.INVOLVED_IN = 'Y'
                AND b.plan_id =#{planId})
            AND data_date =#{dataDate}
    </select>

    <select id="getCustCurveHistory" resultType="com.xqxy.dr.modular.data.entity.ConsCurve" parameterType="com.xqxy.dr.modular.data.param.CustCurveParam">
        SELECT
        data_id as dataId,
        data_date as dataDate,
        data_point_flag as dataPointFlag,
        sum( p1 ) AS p1,
        sum( p2 ) AS p2,
        sum( p3 ) AS p3,
        sum( p4 ) AS p4,
        sum( p5 ) AS p5,
        sum( p6 ) AS p6,
        sum( p7 ) AS p7,
        sum( p8 ) AS p8,
        sum( p9 ) AS p9,
        sum( p10 ) AS p10,
        sum( p11 ) AS p11,
        sum( p12 ) AS p12,
        sum( p13 ) AS p13,
        sum( p14 ) AS p14,
        sum( p15 ) AS p15,
        sum( p16 ) AS p16,
        sum( p17 ) AS p17,
        sum( p18 ) AS p18,
        sum( p19 ) AS p19,
        sum( p20 ) AS p20,
        sum( p21 ) AS p21,
        sum( p22 ) AS p22,
        sum( p23 ) AS p23,
        sum( p24 ) AS p24,
        sum( p25 ) AS p25,
        sum( p26 ) AS p26,
        sum( p27 ) AS p27,
        sum( p28 ) AS p28,
        sum( p29 ) AS p29,
        sum( p30 ) AS p30,
        sum( p31 ) AS p31,
        sum( p32 ) AS p32,
        sum( p33 ) AS p33,
        sum( p34 ) AS p34,
        sum( p35 ) AS p35,
        sum( p36 ) AS p36,
        sum( p37 ) AS p37,
        sum( p38 ) AS p38,
        sum( p39 ) AS p39,
        sum( p40 ) AS p40,
        sum( p41 ) AS p41,
        sum( p42 ) AS p42,
        sum( p43 ) AS p43,
        sum( p44 ) AS p44,
        sum( p45 ) AS p45,
        sum( p46 ) AS p46,
        sum( p47 ) AS p47,
        sum( p48 ) AS p48,
        sum( p49 ) AS p49,
        sum( p50 ) AS p50,
        sum( p51 ) AS p51,
        sum( p52 ) AS p52,
        sum( p53 ) AS p53,
        sum( p54 ) AS p54,
        sum( p55 ) AS p55,
        sum( p56 ) AS p56,
        sum( p57 ) AS p57,
        sum( p58 ) AS p58,
        sum( p59 ) AS p59,
        sum( p60 ) AS p60,
        sum( p61 ) AS p61,
        sum( p62 ) AS p62,
        sum( p63 ) AS p63,
        sum( p64 ) AS p64,
        sum( p65 ) AS p65,
        sum( p66 ) AS p66,
        sum( p67 ) AS p67,
        sum( p68 ) AS p68,
        sum( p69 ) AS p69,
        sum( p70 ) AS p70,
        sum( p71 ) AS p71,
        sum( p72 ) AS p72,
        sum( p73 ) AS p73,
        sum( p74 ) AS p74,
        sum( p75 ) AS p75,
        sum( p76 ) AS p76,
        sum( p77 ) AS p77,
        sum( p78 ) AS p78,
        sum( p79 ) AS p79,
        sum( p80 ) AS p80,
        sum( p81 ) AS p81,
        sum( p82 ) AS p82,
        sum( p83 ) AS p83,
        sum( p84 ) AS p84,
        sum( p85 ) AS p85,
        sum( p86 ) AS p86,
        sum( p87 ) AS p87,
        sum( p88 ) AS p88,
        sum( p89 ) AS p89,
        sum( p90 ) AS p90,
        sum( p91 ) AS p91,
        sum( p92 ) AS p92,
        sum( p93 ) AS p93,
        sum( p94 ) AS p94,
        sum( p95 ) AS p95,
        sum( p96 ) AS p96
        FROM
            dr_cons_curve
        WHERE
            cons_id IN (
            SELECT
                cons_id
            FROM
                dr_user_cons_rela a
                LEFT JOIN dr_plan_cons b ON a.cons_no = b.cons_id
            WHERE
                a.cust_id = #{custId}
                AND b.INVOLVED_IN = 'Y'
                AND b.plan_id =#{planId})
            AND data_date =#{dataDate}
    </select>

    <select id="getPlanNoDe" resultType="com.xqxy.dr.modular.event.entity.PlanCust">
        SELECT partic_id as particId,CUST_ID as custId ,plan_id as planId from dr_plan_cust where deleted='N'
        and PLAN_ID in(SELECT PLAN_ID from dr_plan
        where 1=1
        <if test="eventIds != null and eventIds.size>0">
            and REGULATE_ID in
            <foreach collection="eventIds" item="eventId" index="index" open="(" close=")" separator=",">
                #{eventId}
            </foreach>
        </if>
        )
    </select>

    <select id="getPlanCustCount" resultType="Integer" parameterType="com.xqxy.dr.modular.event.param.DeleteCustParam">
        SELECT count(*) from dr_plan_cust  where
        plan_id = (SELECT PLAN_ID from dr_plan where REGULATE_ID=#{eventId}) and IMPLEMENT is null
    </select>

    <update id="batchUpdateImplement" parameterType="com.xqxy.dr.modular.event.entity.PlanCust">
        <foreach collection="planList" item="item" index="index" open="" close="" separator=";">
            update dr_plan_cust set IMPLEMENT= #{item.implement} where
            plan_id =#{item.planId} and cust_id = #{item.custId}
        </foreach>
    </update>

    <update id="batchUpdateDelete" parameterType="com.xqxy.dr.modular.event.entity.PlanCust">
        <foreach collection="planList" item="item" index="index" open="" close="" separator=";">
            update dr_plan_cust set deleted= #{item.deleted},
            del_rule = #{item.delRule}
            where
            partic_id = #{item.particId}
        </foreach>
    </update>

    <update id="batchUpdateDeleteCons" parameterType="com.xqxy.dr.modular.event.entity.PlanCons">
        <foreach collection="planList" item="item" index="index" open="" close="" separator=";">
            update dr_plan_cons set deleted= #{item.deleted},
            del_rule = #{item.delRule}
            where
            partic_id = #{item.particId}
        </foreach>
    </update>

</mapper>
