<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xqxy.dr.modular.baseline.mapper.CustBaseLineMapper">
    <select id="getCustBaseLine" resultType="com.xqxy.dr.modular.baseline.entity.CustBaseLineDetail">
		SELECT
		d.baseline_lib_id AS baselineLibId,
		a.cons_id AS consNo,
		a.cust_id AS custId,
		b.legal_name AS NAME,
		d.baseline_date AS baselineDate,
		d.cal_rule AS calRule,
		d.simples_date AS simplesDate
		FROM
		dr_plan_cons a
		LEFT JOIN dr_cust b ON a.cust_id = b.id
		LEFT JOIN dr_plan c on c.plan_id = a.plan_id
		LEFT JOIN dr_cons_baseline d on d.baseline_lib_id = c.BASELIN_ID and a.cons_id = d.cons_id
		WHERE
		a.plan_id =(
		SELECT
		a.plan_id
		FROM
		dr_plan a
		LEFT JOIN dr_event b ON a.REGULATE_ID = b.event_id
		LEFT JOIN dr_baseline_library c on c.baselin_id = a.BASELIN_ID
		WHERE
		b.event_status = '03' and NOW() &lt; CONCAT(b.REGULATE_DATE,':',b.END_TIME)
		ORDER BY c.cust_num ASC,c.create_time desc
		limit 1
		) and a.IMPLEMENT='Y'and a.INVOLVED_IN='Y' and d.baseline_lib_id is not null
    </select>

	<select id="getCustBaseLineAll" resultType="com.xqxy.dr.modular.baseline.entity.CustBaseLineDetail">
		SELECT
		d.baseline_lib_id AS baselineLibId,
		a.cons_id AS consNo,
		a.cust_id AS custId,
		b.legal_name AS NAME,
		d.baseline_date AS baselineDate,
		d.cal_rule AS calRule,
		d.simples_date AS simplesDate
		FROM
		dr_plan_cons a
		LEFT JOIN dr_cust b ON a.cust_id = b.id
		LEFT JOIN dr_plan c on c.plan_id = a.plan_id
		LEFT JOIN dr_cons_baseline d on d.baseline_lib_id = c.BASELIN_ID and a.cons_id = d.cons_id
		WHERE
		a.plan_id =(
		SELECT
		a.plan_id
		FROM
		dr_plan a
		LEFT JOIN dr_event b ON a.REGULATE_ID = b.event_id
		LEFT JOIN dr_baseline_library c on c.baselin_id = a.BASELIN_ID
		WHERE
		b.event_status = '03' and NOW() &lt; CONCAT(b.REGULATE_DATE,':',b.END_TIME)
		ORDER BY c.cust_all_num ASC,c.create_time desc
		limit 1
		) and a.IMPLEMENT='Y'and a.INVOLVED_IN='Y' and d.baseline_lib_id is not null
    </select>

	<select id="getCustCurve" resultType="com.xqxy.dr.modular.baseline.entity.CustBaseLineDetail">
		SELECT
			b.custId,
			a.data_date AS simplesDate,
			a.cons_id AS consNo,
			sum( p1 ) AS p1,
			sum( p2 ) AS p2,
			sum( p3 ) AS p3,
			sum( p4 ) AS p4,
			sum( p5 ) AS p5,
			sum( p6 ) AS p6,
			sum( p7 ) AS p7,
			sum( p8 ) AS p8,
			sum( p9 ) AS p9,
			sum( p10 ) AS p10,
			sum( p11 ) AS p11,
			sum( p12 ) AS p12,
			sum( p13 ) AS p13,
			sum( p14 ) AS p14,
			sum( p15 ) AS p15,
			sum( p16 ) AS p16,
			sum( p17 ) AS p17,
			sum( p18 ) AS p18,
			sum( p19 ) AS p19,
			sum( p20 ) AS p20,
			sum( p21 ) AS p21,
			sum( p22 ) AS p22,
			sum( p23 ) AS p23,
			sum( p24 ) AS p24,
			sum( p25 ) AS p25,
			sum( p26 ) AS p26,
			sum( p27 ) AS p27,
			sum( p28 ) AS p28,
			sum( p29 ) AS p29,
			sum( p30 ) AS p30,
			sum( p31 ) AS p31,
			sum( p32 ) AS p32,
			sum( p33 ) AS p33,
			sum( p34 ) AS p34,
			sum( p35 ) AS p35,
			sum( p36 ) AS p36,
			sum( p37 ) AS p37,
			sum( p38 ) AS p38,
			sum( p39 ) AS p39,
			sum( p40 ) AS p40,
			sum( p41 ) AS p41,
			sum( p42 ) AS p42,
			sum( p43 ) AS p43,
			sum( p44 ) AS p44,
			sum( p45 ) AS p45,
			sum( p46 ) AS p46,
			sum( p47 ) AS p47,
			sum( p48 ) AS p48,
			sum( p49 ) AS p49,
			sum( p50 ) AS p50,
			sum( p51 ) AS p51,
			sum( p52 ) AS p52,
			sum( p53 ) AS p53,
			sum( p54 ) AS p54,
			sum( p55 ) AS p55,
			sum( p56 ) AS p56,
			sum( p57 ) AS p57,
			sum( p58 ) AS p58,
			sum( p59 ) AS p59,
			sum( p60 ) AS p60,
			sum( p61 ) AS p61,
			sum( p62 ) AS p62,
			sum( p63 ) AS p63,
			sum( p64 ) AS p64,
			sum( p65 ) AS p65,
			sum( p66 ) AS p66,
			sum( p67 ) AS p67,
			sum( p68 ) AS p68,
			sum( p69 ) AS p69,
			sum( p70 ) AS p70,
			sum( p71 ) AS p71,
			sum( p72 ) AS p72,
			sum( p73 ) AS p73,
			sum( p74 ) AS p74,
			sum( p75 ) AS p75,
			sum( p76 ) AS p76,
			sum( p77 ) AS p77,
			sum( p78 ) AS p78,
			sum( p79 ) AS p79,
			sum( p80 ) AS p80,
			sum( p81 ) AS p81,
			sum( p82 ) AS p82,
			sum( p83 ) AS p83,
			sum( p84 ) AS p84,
			sum( p85 ) AS p85,
			sum( p86 ) AS p86,
			sum( p87 ) AS p87,
			sum( p88 ) AS p88,
			sum( p89 ) AS p89,
			sum( p90 ) AS p90,
			sum( p91 ) AS p91,
			sum( p92 ) AS p92,
			sum( p93 ) AS p93,
			sum( p94 ) AS p94,
			sum( p95 ) AS p95,
			sum( p96 ) AS p96
		FROM
			dr_event_power_sample a
			LEFT JOIN (
			SELECT
				b.id AS consId,
				a.id AS custId
			FROM
				dr_cust a
				LEFT JOIN dr_cons b ON a.id = b.cust_id
			WHERE
				b.id IS NOT NULL
				union all
				SELECT
				b.cons_no AS consId,
				a.id AS custId
				FROM
				dr_cust a
				LEFT JOIN dr_user_cons_rela b ON a.id = b.cust_id
				WHERE
				b.cons_no IS NOT NULL
			) b ON a.cons_id = b.consId
		WHERE
			b.custId IS NOT NULL
			<if test="sampleDateList != null and sampleDateList.size>0">
				and a.data_date in
				<foreach collection="sampleDateList" item="sampleDate" index="index" open="(" close=")" separator=",">
					#{sampleDate}
				</foreach>
			</if>
			<if test="consList != null and consList.size>0">
				and a.cons_id in
				<foreach collection="consList" item="cons" index="index" open="(" close=")" separator=",">
					#{cons}
				</foreach>
			</if>
		GROUP BY
			b.custId,
			a.data_date
	</select>

	<select id="getCustCurveAll" resultType="com.xqxy.dr.modular.baseline.entity.CustBaseLineDetail">
		SELECT
		b.custId,
		a.data_date AS simplesDate,
		a.cons_id AS consNo,
		sum( p1 ) AS p1,
		sum( p2 ) AS p2,
		sum( p3 ) AS p3,
		sum( p4 ) AS p4,
		sum( p5 ) AS p5,
		sum( p6 ) AS p6,
		sum( p7 ) AS p7,
		sum( p8 ) AS p8,
		sum( p9 ) AS p9,
		sum( p10 ) AS p10,
		sum( p11 ) AS p11,
		sum( p12 ) AS p12,
		sum( p13 ) AS p13,
		sum( p14 ) AS p14,
		sum( p15 ) AS p15,
		sum( p16 ) AS p16,
		sum( p17 ) AS p17,
		sum( p18 ) AS p18,
		sum( p19 ) AS p19,
		sum( p20 ) AS p20,
		sum( p21 ) AS p21,
		sum( p22 ) AS p22,
		sum( p23 ) AS p23,
		sum( p24 ) AS p24,
		sum( p25 ) AS p25,
		sum( p26 ) AS p26,
		sum( p27 ) AS p27,
		sum( p28 ) AS p28,
		sum( p29 ) AS p29,
		sum( p30 ) AS p30,
		sum( p31 ) AS p31,
		sum( p32 ) AS p32,
		sum( p33 ) AS p33,
		sum( p34 ) AS p34,
		sum( p35 ) AS p35,
		sum( p36 ) AS p36,
		sum( p37 ) AS p37,
		sum( p38 ) AS p38,
		sum( p39 ) AS p39,
		sum( p40 ) AS p40,
		sum( p41 ) AS p41,
		sum( p42 ) AS p42,
		sum( p43 ) AS p43,
		sum( p44 ) AS p44,
		sum( p45 ) AS p45,
		sum( p46 ) AS p46,
		sum( p47 ) AS p47,
		sum( p48 ) AS p48,
		sum( p49 ) AS p49,
		sum( p50 ) AS p50,
		sum( p51 ) AS p51,
		sum( p52 ) AS p52,
		sum( p53 ) AS p53,
		sum( p54 ) AS p54,
		sum( p55 ) AS p55,
		sum( p56 ) AS p56,
		sum( p57 ) AS p57,
		sum( p58 ) AS p58,
		sum( p59 ) AS p59,
		sum( p60 ) AS p60,
		sum( p61 ) AS p61,
		sum( p62 ) AS p62,
		sum( p63 ) AS p63,
		sum( p64 ) AS p64,
		sum( p65 ) AS p65,
		sum( p66 ) AS p66,
		sum( p67 ) AS p67,
		sum( p68 ) AS p68,
		sum( p69 ) AS p69,
		sum( p70 ) AS p70,
		sum( p71 ) AS p71,
		sum( p72 ) AS p72,
		sum( p73 ) AS p73,
		sum( p74 ) AS p74,
		sum( p75 ) AS p75,
		sum( p76 ) AS p76,
		sum( p77 ) AS p77,
		sum( p78 ) AS p78,
		sum( p79 ) AS p79,
		sum( p80 ) AS p80,
		sum( p81 ) AS p81,
		sum( p82 ) AS p82,
		sum( p83 ) AS p83,
		sum( p84 ) AS p84,
		sum( p85 ) AS p85,
		sum( p86 ) AS p86,
		sum( p87 ) AS p87,
		sum( p88 ) AS p88,
		sum( p89 ) AS p89,
		sum( p90 ) AS p90,
		sum( p91 ) AS p91,
		sum( p92 ) AS p92,
		sum( p93 ) AS p93,
		sum( p94 ) AS p94,
		sum( p95 ) AS p95,
		sum( p96 ) AS p96
		FROM
		dr_event_power_sample a
		LEFT JOIN (
		SELECT
		b.id AS consId,
		a.id AS custId
		FROM
		dr_cust a
		LEFT JOIN dr_cons b ON a.id = b.cust_id
		WHERE
		b.id IS NOT NULL
		union all
		SELECT
		b.cons_no AS consId,
		a.id AS custId
		FROM
		dr_cust a
		LEFT JOIN dr_user_cons_rela b ON a.id = b.cust_id
		WHERE
		b.cons_no IS NOT NULL
		) b ON a.cons_id = b.consId
		WHERE
		b.custId IS NOT NULL
		<if test="sampleDateList != null and sampleDateList.size>0">
			and a.data_date in
			<foreach collection="sampleDateList" item="sampleDate" index="index" open="(" close=")" separator=",">
				#{sampleDate}
			</foreach>
		</if>
		<if test="consList != null and consList.size>0">
			and a.cons_id in
			<foreach collection="consList" item="cons" index="index" open="(" close=")" separator=",">
				#{cons}
			</foreach>
		</if>
		GROUP BY
		b.custId,
		a.data_date
	</select>

	<select id="getCustCurveToday" resultType="com.xqxy.dr.modular.baseline.entity.CustBaseLineDetail">
		SELECT
			b.custId,
			a.data_date AS simplesDate,
			sum( p1 ) AS p1,
			sum( p2 ) AS p2,
			sum( p3 ) AS p3,
			sum( p4 ) AS p4,
			sum( p5 ) AS p5,
			sum( p6 ) AS p6,
			sum( p7 ) AS p7,
			sum( p8 ) AS p8,
			sum( p9 ) AS p9,
			sum( p10 ) AS p10,
			sum( p11 ) AS p11,
			sum( p12 ) AS p12,
			sum( p13 ) AS p13,
			sum( p14 ) AS p14,
			sum( p15 ) AS p15,
			sum( p16 ) AS p16,
			sum( p17 ) AS p17,
			sum( p18 ) AS p18,
			sum( p19 ) AS p19,
			sum( p20 ) AS p20,
			sum( p21 ) AS p21,
			sum( p22 ) AS p22,
			sum( p23 ) AS p23,
			sum( p24 ) AS p24,
			sum( p25 ) AS p25,
			sum( p26 ) AS p26,
			sum( p27 ) AS p27,
			sum( p28 ) AS p28,
			sum( p29 ) AS p29,
			sum( p30 ) AS p30,
			sum( p31 ) AS p31,
			sum( p32 ) AS p32,
			sum( p33 ) AS p33,
			sum( p34 ) AS p34,
			sum( p35 ) AS p35,
			sum( p36 ) AS p36,
			sum( p37 ) AS p37,
			sum( p38 ) AS p38,
			sum( p39 ) AS p39,
			sum( p40 ) AS p40,
			sum( p41 ) AS p41,
			sum( p42 ) AS p42,
			sum( p43 ) AS p43,
			sum( p44 ) AS p44,
			sum( p45 ) AS p45,
			sum( p46 ) AS p46,
			sum( p47 ) AS p47,
			sum( p48 ) AS p48,
			sum( p49 ) AS p49,
			sum( p50 ) AS p50,
			sum( p51 ) AS p51,
			sum( p52 ) AS p52,
			sum( p53 ) AS p53,
			sum( p54 ) AS p54,
			sum( p55 ) AS p55,
			sum( p56 ) AS p56,
			sum( p57 ) AS p57,
			sum( p58 ) AS p58,
			sum( p59 ) AS p59,
			sum( p60 ) AS p60,
			sum( p61 ) AS p61,
			sum( p62 ) AS p62,
			sum( p63 ) AS p63,
			sum( p64 ) AS p64,
			sum( p65 ) AS p65,
			sum( p66 ) AS p66,
			sum( p67 ) AS p67,
			sum( p68 ) AS p68,
			sum( p69 ) AS p69,
			sum( p70 ) AS p70,
			sum( p71 ) AS p71,
			sum( p72 ) AS p72,
			sum( p73 ) AS p73,
			sum( p74 ) AS p74,
			sum( p75 ) AS p75,
			sum( p76 ) AS p76,
			sum( p77 ) AS p77,
			sum( p78 ) AS p78,
			sum( p79 ) AS p79,
			sum( p80 ) AS p80,
			sum( p81 ) AS p81,
			sum( p82 ) AS p82,
			sum( p83 ) AS p83,
			sum( p84 ) AS p84,
			sum( p85 ) AS p85,
			sum( p86 ) AS p86,
			sum( p87 ) AS p87,
			sum( p88 ) AS p88,
			sum( p89 ) AS p89,
			sum( p90 ) AS p90,
			sum( p91 ) AS p91,
			sum( p92 ) AS p92,
			sum( p93 ) AS p93,
			sum( p94 ) AS p94,
			sum( p95 ) AS p95,
			sum( p96 ) AS p96
		FROM
			dr_cons_curve_today a
			LEFT JOIN (
			SELECT
				b.id AS consId,
				a.id AS custId
			FROM
				dr_cust a
				LEFT JOIN dr_cons b ON a.id = b.cust_id
			WHERE
				b.id IS NOT NULL
				union all
				SELECT
				b.cons_no AS consId,
				a.id AS custId
				FROM
				dr_cust a
				LEFT JOIN dr_user_cons_rela b ON a.id = b.cust_id
				WHERE
				b.cons_no IS NOT NULL
			) b ON a.cons_id = b.consId
		WHERE
			b.custId IS NOT NULL
			<if test="sampleDateList != null and sampleDateList.size>0">
				and data_date in
				<foreach collection="sampleDateList" item="sampleDate" index="index" open="(" close=")" separator=",">
					#{sampleDate}
				</foreach>
			</if>
			<if test="consList != null and consList.size>0">
				and a.cons_id in
				<foreach collection="consList" item="cons" index="index" open="(" close=")" separator=",">
					#{cons}
				</foreach>
			</if>
		GROUP BY
			b.custId,
			a.data_date
	</select>

	<select id="getCustAndConsInfo" resultType="com.xqxy.dr.modular.baseline.entity.CustBaseLineDetail">
		SELECT
			b.id AS consNo,
			a.id AS custId,
			a.integrator as integrator
		FROM
			dr_cust a LEFT JOIN dr_cons b on a.id = b.cust_id
			where b.id is not null
		union all
			SELECT
			b.cons_no AS consNo,
			a.id AS custId,
			"1" as integrator
			FROM
			dr_cust a
			LEFT JOIN dr_user_cons_rela b ON a.id = b.cust_id
		where b.id is not null
	</select>

	<select id="getCustBaseLineInfo" resultType="com.xqxy.dr.modular.baseline.entity.CustBaseLineDetail">
        SELECT baseline_id as baselineId, baseline_lib_id as baselineLibId,cust_id as custId,normal as normal,
         max_load_baseline as maxLoadBaseline,min_load_baseline as minLoadBaseline,avg_load_baseline as avgLoadBaseline from dr_cust_baseline
    </select>
</mapper>
